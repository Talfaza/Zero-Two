Compiling Java code...
Compilation successful.
Running Java Code...
Execution successful. Output:
Testing: X := 60;
[32mResult: Success[0m
AST: ASTNode{
  type='Program',
  name='null',
  value=null,
  operator='null',
  children=[
  ASTNode{
    type='Assignment',
    name='X',
    value=null,
    operator='null',
    children=[
    ASTNode{
      type='Literal',
      name='null',
      value=60.0,
      operator='null',
      children=[
      ]
    }
    ]
  }
  ]
}

Testing: y := X / 2 + 2;
[32mResult: Success[0m
AST: ASTNode{
  type='Program',
  name='null',
  value=null,
  operator='null',
  children=[
  ASTNode{
    type='Assignment',
    name='y',
    value=null,
    operator='null',
    children=[
    ASTNode{
      type='Expression',
      name='null',
      value=null,
      operator='+',
      children=[
      ASTNode{
        type='Term',
        name='null',
        value=null,
        operator='/',
        children=[
        ASTNode{
          type='Variable',
          name='X',
          value=null,
          operator='null',
          children=[
          ]
        }
        ASTNode{
          type='Literal',
          name='null',
          value=2.0,
          operator='null',
          children=[
          ]
        }
        ]
      }
      ASTNode{
        type='Literal',
        name='null',
        value=2.0,
        operator='null',
        children=[
        ]
      }
      ]
    }
    ]
  }
  ]
}

Testing: z := 1 + 1;
[32mResult: Success[0m
AST: ASTNode{
  type='Program',
  name='null',
  value=null,
  operator='null',
  children=[
  ASTNode{
    type='Assignment',
    name='z',
    value=null,
    operator='null',
    children=[
    ASTNode{
      type='Expression',
      name='null',
      value=null,
      operator='+',
      children=[
      ASTNode{
        type='Literal',
        name='null',
        value=1.0,
        operator='null',
        children=[
        ]
      }
      ASTNode{
        type='Literal',
        name='null',
        value=1.0,
        operator='null',
        children=[
        ]
      }
      ]
    }
    ]
  }
  ]
}

Testing: print(1);
[32mResult: Success[0m
AST: ASTNode{
  type='Program',
  name='null',
  value=null,
  operator='null',
  children=[
  ASTNode{
    type='Print',
    name='null',
    value=null,
    operator='null',
    children=[
    ASTNode{
      type='Literal',
      name='null',
      value=1.0,
      operator='null',
      children=[
      ]
    }
    ]
  }
  ]
}

Testing: print(X);
[32mResult: Success[0m
AST: ASTNode{
  type='Program',
  name='null',
  value=null,
  operator='null',
  children=[
  ASTNode{
    type='Print',
    name='null',
    value=null,
    operator='null',
    children=[
    ASTNode{
      type='Variable',
      name='X',
      value=null,
      operator='null',
      children=[
      ]
    }
    ]
  }
  ]
}

Testing: 1;
[31mResult: Error - Erreur: attendu une commande ou une expression[0m

Testing: print(z + y);
[32mResult: Success[0m
AST: ASTNode{
  type='Program',
  name='null',
  value=null,
  operator='null',
  children=[
  ASTNode{
    type='Print',
    name='null',
    value=null,
    operator='null',
    children=[
    ASTNode{
      type='Expression',
      name='null',
      value=null,
      operator='+',
      children=[
      ASTNode{
        type='Variable',
        name='z',
        value=null,
        operator='null',
        children=[
        ]
      }
      ASTNode{
        type='Variable',
        name='y',
        value=null,
        operator='null',
        children=[
        ]
      }
      ]
    }
    ]
  }
  ]
}

Deleting .class files...
Deletion successful.

